rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function hasRole(role) {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    function isAdmin() {
      return hasRole('admin');
    }
    
    function isSeller() {
      return hasRole('seller') || isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      allow read: if isOwner(userId) || isAdmin();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Events collection
    match /events/{eventId} {
      allow read: if true; // Public read access
      allow create: if isSeller();
      allow update: if isSeller() && (resource.data.sellerId == request.auth.uid || isAdmin());
      allow delete: if isSeller() && (resource.data.sellerId == request.auth.uid || isAdmin());
    }
    
    // Tickets collection
    match /tickets/{ticketId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || // Ticket owner
        isSeller() && resource.data.eventId in get(/databases/$(database)/documents/events/$(resource.data.eventId)).data.sellerId == request.auth.uid || // Event seller
        isAdmin()
      );
      allow create: if isAdmin(); // Only admin or system can create tickets
      allow update: if isAdmin() || (isSeller() && resource.data.eventId in get(/databases/$(database)/documents/events/$(resource.data.eventId)).data.sellerId == request.auth.uid);
      allow delete: if isAdmin();
    }
    
    // Orders collection
    match /orders/{orderId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || // Order owner
        isSeller() && resource.data.eventId in get(/databases/$(database)/documents/events/$(resource.data.eventId)).data.sellerId == request.auth.uid || // Event seller
        isAdmin()
      );
      allow create: if isAuthenticated();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Verifications collection
    match /verifications/{verificationId} {
      allow read: if isAuthenticated() && (
        resource.data.verifiedBy == request.auth.uid || // Verifier
        isAdmin()
      );
      allow create: if isSeller();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Saved events collection
    match /savedEvents/{savedEventId} {
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Payments collection
    match /payments/{paymentId} {
      allow read: if isAuthenticated() && (
        resource.data.userId == request.auth.uid || // Payment owner
        isSeller() && resource.data.eventId in get(/databases/$(database)/documents/events/$(resource.data.eventId)).data.sellerId == request.auth.uid || // Event seller
        isAdmin()
      );
      allow create: if isAdmin(); // Only admin or system can create payments
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}
